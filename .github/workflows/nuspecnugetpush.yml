on: [push]

jobs:
  nuspec_nugetpush_job:
    runs-on: ubuntu-latest
    
    env:
      packagename: mynuspecnugetpkg
      projectpath: ./nugetdemo/mynuspecnugetpkg/mynuspecnugetpkg.csproj
      buildconfiguration: release
      buildoutputpath: mybuildgout
      nuspecpath: mybuildgout/mynuspecnugetpkg.nuspec
      pkgoutputpath: mypkgout
      runid: ${{github.run_id}}
      githubtoken: ${{ secrets.GITHUB_TOKEN }}
      githubnugetpackageregistry: https://nuget.pkg.github.com/chamindac/index.json
      githubrepourl: https://github.com/chamindac/MyPackageDemo.git
    
    steps:
      - uses: actions/checkout@v2.3.4
        
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '5.0.101'
        
      - name: Restore with dotnet
        run: dotnet restore ${projectpath}

      - name: Build with dotnet
        run: dotnet build ${projectpath} --configuration ${buildconfiguration} --output ${buildoutputpath} --version-suffix ${runid} --no-restore
        
      - name: Create nuspec file
        shell: pwsh
        run: |
              $nuspec = '<?xml version="1.0"?>
                         <package >
                           <metadata>
                             <id>mynuspecnuget</id>
                             <version>1.0.0</version>
                             <authors>chdemo</authors>
                             <description>NuGet package sample with nuspec!</description>
                             <repository type="git" url="' + $env:githubrepourl + '"></repository>
                           </metadata>
                           <files>
                              <file src="*.dll" target="lib\net5.0" />
                           </files>
                         </package>';
               Write-Host $nuspec          
               $nuspec | out-file $env:nuspecpath -Encoding UTF8

      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v1.0.5
      
      - name: nuget pack with nuspec
        run: nuget pack ${nuspecpath} -BasePath ${buildoutputpath} -OutputDirectory ${pkgoutputpath} -Suffix ${runid}

      - name: Publish Nuget to GitHub registry
        run: dotnet nuget push ${pkgoutputpath}/*.nupkg --api-key ${githubtoken} --source ${githubnugetpackageregistry} --skip-duplicate --no-symbols true